// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace req
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Request : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Request GetRootAsRequest(ByteBuffer _bb) { return GetRootAsRequest(_bb, new Request()); }
  public static Request GetRootAsRequest(ByteBuffer _bb, Request obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Request __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Code { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<req.Request> CreateRequest(FlatBufferBuilder builder,
      int code = 0) {
    builder.StartTable(1);
    Request.AddCode(builder, code);
    return Request.EndRequest(builder);
  }

  public static void StartRequest(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddCode(FlatBufferBuilder builder, int code) { builder.AddInt(0, code, 0); }
  public static Offset<req.Request> EndRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<req.Request>(o);
  }
  public static void FinishRequestBuffer(FlatBufferBuilder builder, Offset<req.Request> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedRequestBuffer(FlatBufferBuilder builder, Offset<req.Request> offset) { builder.FinishSizePrefixed(offset.Value); }
}


}
